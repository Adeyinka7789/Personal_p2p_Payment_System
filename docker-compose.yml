version: "3.9"

services:
  # =====================
  # PostgreSQL Database
  # =====================
  ppps-db:
    image: postgres:16-alpine
    container_name: ppps-postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ppps_db_data:/var/lib/postgresql/data
    restart: always

  # =====================
  # Redis Cache
  # =====================
  redis:
    image: redis:7-alpine
    container_name: ppps-redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

  # =====================
  # Zookeeper (Kafka dependency)
  # =====================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: ppps-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    restart: always

  # =====================
  # Kafka Broker
  # =====================
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: ppps-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9094:9094"
    restart: always

  # =====================
  # P2P Payment Service
  # =====================
  ppps-service:
    build: .
    container_name: ppps-service
    depends_on:
      - ppps-db
      - redis
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://ppps-db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: ${REDIS_PORT}
      SERVER_PORT: ${SERVER_PORT}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
    ports:
      - "8080:8080"
    restart: always

# =====================
# Persistent Volumes
# =====================
volumes:
  ppps_db_data:
  redis_data: